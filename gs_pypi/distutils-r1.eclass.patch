--- distutils-r1.eclass
+++ gs-distutils-r1.eclass
@@ -624,7 +624,7 @@
 	esac
 
 	_DISTUTILS_TEST_RUNNER=${1}
-	python_test() { distutils-r1_python_test; }
+	python_test() { gs-distutils-r1_python_test; }
 
 	local test_deps=${RDEPEND}
 	if [[ -n ${test_pkg} ]]; then
@@ -1055,7 +1055,7 @@
 #
 # At some point in the future, it may also apply eclass-specific
 # distutils patches and/or quirks.
-distutils-r1_python_prepare_all() {
+gs-distutils-r1_python_prepare_all() {
 	debug-print-function ${FUNCNAME} "${@}"
 	_distutils-r1_check_all_phase_mismatch
 
@@ -1239,6 +1239,10 @@
 		# if pyproject.toml exists, try getting the backend from it
 		# NB: this could fail if pyproject.toml doesn't list one
 		build_backend=$(gpep517 get-backend)
+		if [[ ${build_backend} == "poetry.masonry.api" ]]; then
+			# hotfix for renaming issue
+			build_backend=poetry.core.masonry.api
+		fi
 	fi
 	if [[ -z ${build_backend} && ${DISTUTILS_USE_PEP517} == setuptools &&
 		-f setup.py ]]
@@ -1483,7 +1487,7 @@
 # In legacy mode, runs 'esetup.py build'. Any parameters passed to this
 # function will be appended to setup.py invocation, i.e. passed
 # as options to the 'build' command.
-distutils-r1_python_compile() {
+gs-distutils-r1_python_compile() {
 	debug-print-function ${FUNCNAME} "${@}"
 
 	_python_check_EPYTHON
@@ -1599,7 +1603,7 @@
 # first.
 #
 # This function is used only if distutils_enable_tests is called.
-distutils-r1_python_test() {
+gs-distutils-r1_python_test() {
 	debug-print-function ${FUNCNAME} "${@}"
 
 	if [[ -z ${_DISTUTILS_TEST_RUNNER} ]]; then
@@ -1646,7 +1650,7 @@
 # In the legacy mode, calls `esetup.py install` to install the package.
 # Any parameters passed to this function will be appended
 # to the setup.py invocation (i.e. as options to the 'install' command).
-distutils-r1_python_install() {
+gs-distutils-r1_python_install() {
 	debug-print-function ${FUNCNAME} "${@}"
 
 	_python_check_EPYTHON
@@ -1763,7 +1767,7 @@
 # @FUNCTION: distutils-r1_python_install_all
 # @DESCRIPTION:
 # The default python_install_all(). It installs the documentation.
-distutils-r1_python_install_all() {
+gs-distutils-r1_python_install_all() {
 	debug-print-function ${FUNCNAME} "${@}"
 	_distutils-r1_check_all_phase_mismatch
 
@@ -1783,7 +1787,7 @@
 # If in-source builds are used, the command is executed in the directory
 # holding the per-implementation copy of sources. BUILD_DIR points
 # to the 'build' subdirectory.
-distutils-r1_run_phase() {
+gs-distutils-r1_run_phase() {
 	debug-print-function ${FUNCNAME} "${@}"
 
 	if [[ ${DISTUTILS_IN_SOURCE_BUILD} ]]; then
@@ -1888,7 +1892,7 @@
 		# store for restoring after distutils-r1_run_phase.
 		local _DISTUTILS_INITIAL_CWD=${PWD}
 		multibuild_foreach_variant \
-			distutils-r1_run_phase "${@}"
+			gs-distutils-r1_run_phase "${@}"
 	fi
 }
 
@@ -1902,7 +1906,7 @@
 
 	# store for restoring after distutils-r1_run_phase.
 	local _DISTUTILS_INITIAL_CWD=${PWD}
-	set -- distutils-r1_run_phase "${@}"
+	set -- gs-distutils-r1_run_phase "${@}"
 
 	if [[ ! ${DISTUTILS_SINGLE_IMPL} ]]; then
 		local _DISTUTILS_CALLING_FOREACH_IMPL=1
@@ -1918,16 +1922,27 @@
 	fi
 }
 
-distutils-r1_src_prepare() {
+gs-distutils-r1_src_prepare() {
 	debug-print-function ${FUNCNAME} "${@}"
 	local ret=0
 	local _DISTUTILS_DEFAULT_CALLED
 
+	# We always use the "standalone" setting. However this is not always
+	# apropriate so we need to clean up and disable pep517 usage in case
+	# where the legacy mode is necessary.
+	if [[ ${DISTUTILS_USE_PEP517} == "standalone" ]]; then
+		# Guard against projects having pyproject.toml but not actually
+		# using it for build purposes.
+		if [[ ! -f pyproject.toml || -z $(gpep517 get-backend) ]]; then
+			unset DISTUTILS_USE_PEP517
+		fi
+	fi
+
 	# common preparations
 	if declare -f python_prepare_all >/dev/null; then
 		python_prepare_all || ret=${?}
 	else
-		distutils-r1_python_prepare_all || ret=${?}
+		gs-distutils-r1_python_prepare_all || ret=${?}
 	fi
 
 	if [[ ! ${_DISTUTILS_DEFAULT_CALLED} ]]; then
@@ -1941,7 +1956,7 @@
 	return ${ret}
 }
 
-distutils-r1_src_configure() {
+gs-distutils-r1_src_configure() {
 	debug-print-function ${FUNCNAME} "${@}"
 	local ret=0
 
@@ -1993,14 +2008,14 @@
 	fi
 }
 
-distutils-r1_src_compile() {
+gs-distutils-r1_src_compile() {
 	debug-print-function ${FUNCNAME} "${@}"
 	local ret=0
 
 	if declare -f python_compile >/dev/null; then
 		_distutils-r1_run_foreach_impl python_compile || ret=${?}
 	else
-		_distutils-r1_run_foreach_impl distutils-r1_python_compile || ret=${?}
+		_distutils-r1_run_foreach_impl gs-distutils-r1_python_compile || ret=${?}
 	fi
 
 	if declare -f python_compile_all >/dev/null; then
@@ -2036,7 +2051,7 @@
 	fi
 }
 
-distutils-r1_src_test() {
+gs-distutils-r1_src_test() {
 	debug-print-function ${FUNCNAME} "${@}"
 	local ret=0
 
@@ -2167,20 +2182,20 @@
 	fi
 }
 
-distutils-r1_src_install() {
+gs-distutils-r1_src_install() {
 	debug-print-function ${FUNCNAME} "${@}"
 	local ret=0
 
 	if declare -f python_install >/dev/null; then
 		_distutils-r1_run_foreach_impl python_install || ret=${?}
 	else
-		_distutils-r1_run_foreach_impl distutils-r1_python_install || ret=${?}
+		_distutils-r1_run_foreach_impl gs-distutils-r1_python_install || ret=${?}
 	fi
 
 	if declare -f python_install_all >/dev/null; then
 		_distutils-r1_run_common_phase python_install_all || ret=${?}
 	else
-		_distutils-r1_run_common_phase distutils-r1_python_install_all || ret=${?}
+		_distutils-r1_run_common_phase gs-distutils-r1_python_install_all || ret=${?}
 	fi
 
 	_distutils-r1_check_namespace_pth
